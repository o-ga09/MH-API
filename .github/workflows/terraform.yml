name: terraform

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - "terraform/**"
env:
  GCP_PROJECT_NUMBER: ${{ secrets.GCP_PROJECT_NUMBER }}
  TERRAFORM_LOCAL_VARIABLE: ${{ secrets.TERRAFORM_LOCAL_VARIABLE }}

defaults:
  run:
    working-directory: ./terraform

jobs:
  terraform-workflow:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write

    # Workload Identity 連携
    steps:
      - uses: actions/checkout@v3

      - name: terraform local varianle
        run: |
          echo "${{ secrets.TERRAFORM_LOCAL_VARIABLE }}" | sed 's/X/"/g' > local.tf
          ls

      - name: Upload local.tf
        uses: actions/upload-artifact@v2
        with:
          name: local-tf-file
          path: ./terraform/local.tf

      # - id: "auth"
      #   name: "Authenticate to Google Cloud"
      #   uses: "google-github-actions/auth@v1"
      #   with:
      #     workload_identity_provider: "projects/${{ env.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/terraform-pool/providers/terraform-provider"
      #     service_account: "terraform@mh-api-389212.iam.gserviceaccount.com"

      # - uses: hashicorp/setup-terraform@v2

      # - name: Terraform fmt
      #   id: fmt
      #   run: terraform fmt -check -recursive
      #   continue-on-error: true

      # - name: Terraform Init
      #   id: init
      #   run: terraform init

      # - name: Terraform Validate
      #   id: validate
      #   run: terraform validate -no-color

      # - name: Terraform Plan
      #   id: plan
      #   run: terraform plan -no-color
      #   continue-on-error: true

      # - name: Comment Terraform Plan
      #   uses: actions/github-script@v6
      #   if: github.event_name == 'pull_request'
      #   env:
      #     PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const output = `#### Terraform Format and Style \`${{ steps.fmt.outcome }}\`
      #       #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
      #       #### Terraform Validation \`${{ steps.validate.outcome }}\`
      #       <details><summary>Validation Output</summary>
      #       \`\`\`\n
      #       ${{ steps.validate.outputs.stdout }}
      #       \`\`\`
      #       </details>
      #       #### Terraform Plan \`${{ steps.plan.outcome }}\`
      #       <details><summary>Show Plan</summary>
      #       \`\`\`\n
      #       ${process.env.PLAN}
      #       \`\`\`
      #       </details>
      #       *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: output
      #       })

      # - name: Terraform Plan Status
      #   if: steps.plan.outcome == 'failure'
      #   run: exit 1

      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   run: terraform apply -auto-approve -input=false
