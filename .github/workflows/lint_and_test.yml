name: lint and test
on:
  pull_request:
    branches:
      - "main"
jobs:
  lint:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          golangci_lint_flags: "--timeout=5m --config=./.golangci.yml ./..."
          fail_on_error: true
          reporter: "github-pr-review"

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22
      
      - name: run Docker
        run: |
          cd environment
          docker compose up -d mh-api-dbsrv01

      - name: testing
        run: |
          go test ./... -parallel=1 -coverprofile=coverage.out

      - name: create report
        uses: k1LoW/octocov-action@v0
  
  e2e-test:
    name: e2e test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22
      
      - name: run Docker
        run: |
          cd environment
          docker compose up

      - name: Install scenarigo
        run: go install github.com/zoncoen/scenarigo/cmd/scenarigo@v0.16.1

      - name: testing
        run: |
          scenarigo run --config scenario/scenarigo.yaml
